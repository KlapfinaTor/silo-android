@startuml

title __SILO's Class Diagram__\n

  package at.klapfinator.silo {
    class DeviceLogData {
        - id : long
        - message : String
        - dateLogged : long
        ~ setMessage()
        ~ setDateLogged()
        + setId()
        + getMessage()
        + getDateLogged()
        + getId()
    }
  }
  

  package at.klapfinator.silo {
    interface DeviceLogDataDao {
        {abstract} + getAllLogs()
        {abstract} + getSpecificAmountOfLogs()
        {abstract} + getLogById()
        {abstract} + count()
        {abstract} + insert()
        {abstract} + update()
        {abstract} + delete()
        {abstract} + deleteAllLogs()
        {abstract} + deleteLogById()
        {abstract} + deleteOldLogs()
    }
  }
  

  package at.klapfinator.silo {
    abstract class DeviceLogDatabase {
        {static} + DATABASE_NAME : String
        {abstract} + deviceLogDataDao()
    }
  }
  

  package at.klapfinator.silo {
    class DeviceLogDatabaseAccess {
        {static} - instance : DeviceLogDatabaseAccess
        ~ DeviceLogDatabaseAccess()
        {static} ~ getDatabase()
    }
  }
  

  package at.klapfinator.silo {
    class HttpSender {
        {static} - TAG : String
        - url : String
        - context : Context
        ~ HttpSender()
        + pushLogs()
    }
  }
  

  package at.klapfinator.silo {
    interface LogFormat {
        {abstract} + getFormattedLogString()
    }
  }
  

  package at.klapfinator.silo {
    class LogFormatHelper {
        - androidId : String
        - sendAsJSONString : boolean
        + LogFormatHelper()
        + getFormattedLogString()
        {static} - getLogLevelName()
    }
  }
  

  package at.klapfinator.silo {
    interface LogSender {
        {abstract} + pushLogs()
    }
  }
  

  package at.klapfinator.silo {
    class Silo {
        {static} - logCatOutputEnabled : boolean
        {static} - TAG : String
        {static} - context : Context
        {static} - logSender : LogSender
        {static} - logFormatHelper : LogFormat
        {static} - url : String
        {static} - batchLogSize : int
        {static} - logLevel : int
        - Silo()
        {static} + initialize()
        {static} + initialize()
        {static} - isSiloInitialized()
        {static} + setUrl()
        {static} + getBatchLogSize()
        {static} + setBatchLogSize()
        {static} + isLogCatOutputEnabled()
        {static} + setLogCatOutputEnabled()
        {static} + getLogLevel()
        {static} + setLogLevel()
        {static} - getSpecificAmountOfLogsAsList()
        {static} - insertLogIntoDb()
        {static} ~ deleteLogs()
        {static} + push()
        {static} - exceptionToString()
        {static} - getLogById()
        {static} - getLogAmountInDatabase()
        {static} + getPendingLogAmount()
        {static} + send()
        {static} - log()
        {static} + v()
        {static} + v()
        {static} + v()
        {static} + v()
        {static} + i()
        {static} + i()
        {static} + i()
        {static} + i()
        {static} + d()
        {static} + d()
        {static} + d()
        {static} + d()
        {static} + e()
        {static} + e()
        {static} + e()
        {static} + e()
        {static} + w()
        {static} + w()
        {static} + w()
        {static} + w()
        {static} + wtf()
        {static} + a()
    }
  }
  

  DeviceLogDatabase -up-|> RoomDatabase
  DeviceLogDatabaseAccess o-- DeviceLogDatabase : database
  HttpSender -up-|> LogSender
  LogFormatHelper -up-|> LogFormat


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
